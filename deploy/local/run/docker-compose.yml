services:
  rabbitmq:
    image: rabbitmq:4.0.5-management
    ports:
      - "15672:15672"  # Management web UI
    environment:
      RABBITMQ_DEFAULT_USER: guest 
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  mysql:
    image: bitnami/mysql:8.0
    healthcheck:
      test: "mysql --user=root --password=test1234 --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    ports:
      - 8306:3306
    volumes:
      - ../../../docs/db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - mysql_data:/bitnami/mysql/data
    environment:
      - MYSQL_ROOT_PASSWORD=test1234
      - MYSQL_DATABASE=idnremote

  crawler:
    build:
      context: ../../../
      dockerfile: ./build/package/crawler-worker/Dockerfile
    depends_on:
      - server
    environment:
      - NOTION_DATABASE_ID=${IDN_REMOTE_ENTRY_NOTION_DATABASE_ID_DEV} # this is dev table
      - NOTION_TOKEN=${IDN_REMOTE_ENTRY_NOTION_TOKEN}
      - OPENAI_KEY=${IDN_REMOTE_ENTRY_OPENAI_KEY}
      - SERVER_API_KEY=d2e97dca-1131-4344-af0a-b3406e7ecb06
      - SERVER_BASE_URL=http://server:9864
      - CRON_SCHEDULE=${IDN_REMOTE_ENTRY_CRAWLER_SCHEDULE:-0 0 * * *} # Default to run every day at midnight
      - ENABLED_APPLICABLE_CHECKER_LLM=true
      - ENABLED_WEWORKREMOTELY_CRAWLER=true
      - ENABLED_GOLANGPROJECTS_CRAWLER=true

  server:
    build:
      context: ../../../
      dockerfile: ./build/package/server/Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - NOTION_DATABASE_ID=${IDN_REMOTE_ENTRY_NOTION_DATABASE_ID_DEV} # this is dev table
      - NOTION_TOKEN=${IDN_REMOTE_ENTRY_NOTION_TOKEN}
      - OPENAI_KEY=${IDN_REMOTE_ENTRY_OPENAI_KEY}
      - SERVER_DOMAIN=${IDN_REMOTE_ENTRY_SERVER_DOMAIN}
      - LISTEN_PORT=9864
      - CLIENT_API_KEY=d2e97dca-1131-4344-af0a-b3406e7ecb06
      - RABBITMQ_CONN=amqp://guest:guest@rabbitmq:5672/
      - RABBITMQ_VACANCY_QUEUE_NAME=vacancy_queue
      - APPROVED_SUBMITTER_EMAILS=${IDN_REMOTE_ENTRY_APPROVED_SUBMITTER_EMAILS}
      - ADMIN_EMAILS=${IDN_REMOTE_ENTRY_ADMIN_EMAILS}
      - SMTP_HOST=${IDN_REMOTE_ENTRY_SMTP_HOST}
      - SMTP_PORT=${IDN_REMOTE_ENTRY_SMTP_PORT}
      - SMTP_FROM=${IDN_REMOTE_ENTRY_SMTP_FROM}
      - SMTP_PASS=${IDN_REMOTE_ENTRY_SMTP_PASS}
      - APPROVAL_JWT_SECRET_KEY=${IDN_REMOTE_ENTRY_APPROVAL_JWT_SECRET_KEY}
      - MYSQL_DSN=root:test1234@tcp(mysql:3306)/idnremote?timeout=5s
    ports:
      - "9864:9864"

  vacancy-worker:
    build:
      context: ../../../
      dockerfile: ./build/package/vacancy-worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - NOTION_DATABASE_ID=${IDN_REMOTE_ENTRY_NOTION_DATABASE_ID_DEV} # this is dev table
      - NOTION_TOKEN=${IDN_REMOTE_ENTRY_NOTION_TOKEN}
      - OPENAI_KEY=${IDN_REMOTE_ENTRY_OPENAI_KEY}
      - RABBITMQ_CONN=amqp://guest:guest@rabbitmq:5672/
      - RABBITMQ_WA_QUEUE_NAME=wa_queue
      - RABBITMQ_VACANCY_QUEUE_NAME=vacancy_queue

  notification-worker:
    build:
      context: ../../../
      dockerfile: ./build/package/notification-worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - WHATSAPP_API_USER=${GHAZLABS_WA_SERVER_USER}
      - WHATSAPP_API_PASS=${GHAZLABS_WA_SERVER_PASS}
      - WHATSAPP_API_BASE_URL=${GHAZLABS_WA_SERVER_URL}
      - WHATSAPP_RECIPIENT_IDS=120363390036841640@newsletter,120363376193442839@g.us # this is dev channel & dev community
      - RABBITMQ_CONN=amqp://guest:guest@rabbitmq:5672/
      - RABBITMQ_WA_QUEUE_NAME=wa_queue

volumes:
  rabbitmq_data:
  mysql_data: